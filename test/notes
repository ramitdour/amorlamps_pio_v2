#include <littlefs.h>    // Altough littlefs is inported so FS is not required but , in my case I had to add FS
#include <Ticker.h>      //for LED status if Wifi
#include <WiFiManager.h> //https://github.com/tzapu/WiFiManager WiFi Configuration Magic
#include <ESP8266WiFi.h> // For basic functionality of ESP8266
// Fast led for RGB leds
#include <FastLED.h>
#include "amorlamps.h"

Free Heap>43056


using #include <WiFiManager.h> and  #include "ESPAsyncWebServer.h" was creating conflict in usage so  renamed 

#ifndef WEBSERVER_H
typedef enum {
  HTTP_GET_ASYNC     = 0b00000001,
  HTTP_POST_ASYNC    = 0b00000010,
  HTTP_DELETE_ASYNC  = 0b00000100,
  HTTP_PUT_ASYNC     = 0b00001000,
  HTTP_PATCH_ASYNC   = 0b00010000,
  HTTP_HEAD_ASYNC    = 0b00100000,
  HTTP_OPTIONS_ASYNC = 0b01000000,
  HTTP_ANY_ASYNC     = 0b01111111,
} WebRequestMethod;
#endif

added <_ASYNC> in the end of all libs

for uploding flies only .bin file

solved the issue for async file write to flash

// #define DEFAULT_MAX_WS_CLIENTS 4
#define DEFAULT_MAX_WS_CLIENTS 1
inasync websocket


regex to make F strings

(Serial.print\(){1}("(.*)"){1}
(Serial.println\(){1}("(.*)"){1}
$1F($2)

TODO: 
error logs if not connected to client , or send logs to aws 
shadow if possiable
index.html
check all print statements
hardcoded values to soft coded
aws char array re check;
delete unnecessary data of data/

// wifi reset on button press or hold for 2 sec

update config file json , given file,

// why crashing after wifi setup.

// soft code   this line espClient.setBufferSizes(2048, 1024); // TODO: this increased the avaliavle heap from 4k to 17k, but why and how ?




in wifimanager 

  // server->sendHeader("Content-Length", String(page.length()));
  // server->send(200, "text/html", page);

  server->sendHeader("Location", String("http://www.amorlamps.com/setup"), true);
  server->send(302, "text/plain", "");

    wifiManager.setAPNameDeviceId(deviceId.c_str());


  server->sendHeader("Location", String("http://www.amorlamps.com/setup/")+_apNameDeviceId, true);
  server->send(302, "text/plain", "");

  DEBUG_WM(F("Sent wifi save page"));
   DEBUG_WM(F("redrirected to http://www.amorlamps.com/setup/"));


  //to store device id for amor lamps
    void          setAPNameDeviceId(char const *apNameDeviceId);

    void WiFiManager::setAPNameDeviceId(char const *apNameDeviceId)
{
  _apNameDeviceId = apNameDeviceId;
}

const char*   _apNameDeviceId                 = "no-net-did";


double hsadow updates on fast color  changing, not retaing last color shadow sometimes.

web ota implemented 2.0












